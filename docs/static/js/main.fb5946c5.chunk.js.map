{"version":3,"sources":["components/DoomFire/fireColorsPalette.ts","components/DoomFire/styles.ts","components/DoomFire/index.tsx","theme/GlobalStyles.ts","App.tsx","index.tsx"],"names":["fireColorsPalette","Container","styled","section","Table","table","TableData","td","Pixel","props","bg","PixelIndex","span","DoomFire","fireWidth","fireHeight","debug","forceUpdate","useState","count","setCount","increment","prevCount","useForceUpdate","Array","from","length","firePixelsArray","setFirePixelsArray","_","i","fireWithArray","fireHeightArray","createFireIntensityPerPixel","useCallback","currentPixelIndex","belowPixelIndex","decay","Math","floor","random","oldArr","newArr","calculateFirePropagation","column","row","createFireSource","overflowPixelIndex","pixelIndex","renderFire","map","rowsColumns","pixelIntensity","colorString","start","setInterval","useEffect","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb5946c5.chunk.js","sourcesContent":["export const fireColorsPalette = [\n  '7, 7, 7',\n  '31, 7, 7',\n  '47, 15, 7',\n  '71, 15, 7',\n  '87, 23, 7',\n  '103, 31, 7',\n  '119, 31, 7',\n  '143, 39, 7',\n  '159, 47, 7',\n  '175, 63, 7',\n  '191, 71, 7',\n  '199, 71, 7',\n  '223, 79, 7',\n  '223, 87, 7',\n  '223, 87, 7',\n  '215, 95, 7',\n  '215, 95, 7',\n  '215, 103, 15',\n  '207, 111, 15',\n  '207, 119, 15',\n  '207, 127, 15',\n  '207, 135, 23',\n  '199, 135, 23',\n  '199, 143, 23',\n  '199, 151, 31',\n  '191, 159, 31',\n  '191, 159, 31',\n  '191, 167, 39',\n  '191, 167, 39',\n  '191, 175, 47',\n  '183, 175, 47',\n  '183, 183, 47',\n  '183, 183, 55',\n  '207, 207, 111',\n  '223, 223, 159',\n  '239, 239, 199',\n  '255, 255, 255',\n]\n","import styled from 'styled-components'\n\nexport const Container = styled.section`\n  display: flex;\n  flex: 1;\n  min-height: 100vh;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  /* border: 1px solid #000; */\n\n  box-shadow: 0 2px 20px -10px rgba(0, 0, 0, 1);\n`\n\nexport const TableData = styled.td`\n  width: 50px;\n  height: 50px;\n  border: 1px solid #000;\n  text-align: center;\n  vertical-align: middle;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  font-size: 18px;\n  position: relative;\n`\n\nexport const Pixel = styled(TableData)<{ bg: string }>`\n  background-color: rgb(${props => props.bg});\n  width: 4px;\n  height: 4px;\n  border: 0;\n`\n\nexport const PixelIndex = styled.span`\n  font-size: 10px;\n  display: inline-block;\n  position: absolute;\n  top: 2px;\n  right: 2px;\n  color: #999;\n`\n","import React, { useCallback, useEffect, useState } from 'react'\n\nimport { fireColorsPalette } from './fireColorsPalette'\n\nimport * as S from './styles'\n\ninterface IDoomFireProps {\n  fireWidth?: number\n  fireHeight?: number\n  debug?: boolean\n}\n\nconst useForceUpdate = () => {\n  const [count, setCount] = useState(0)\n\n  const increment = () => {\n    setCount(prevCount => prevCount + 1)\n  }\n  return { increment, count }\n}\n\nconst DoomFire: React.FC<IDoomFireProps> = ({\n  fireWidth = 80,\n  fireHeight = 45,\n  debug = false,\n}) => {\n  const { increment: forceUpdate } = useForceUpdate()\n  const [firePixelsArray, setFirePixelsArray] = useState<number[]>(() =>\n    Array.from({ length: fireWidth * fireHeight }, () => 0)\n  )\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [fireWithArray, setFireWithArray] = useState<number[]>(() =>\n    Array.from({ length: fireWidth }, (_, i) => i)\n  )\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [fireHeightArray, setFireHeightArray] = useState<number[]>(() =>\n    Array.from({ length: fireHeight }, (_, i) => i)\n  )\n\n  const createFireIntensityPerPixel = useCallback(\n    (currentPixelIndex: number) => {\n      const belowPixelIndex = currentPixelIndex + fireWidth\n\n      if (belowPixelIndex >= fireHeight * fireWidth) {\n        return\n      }\n\n      const decay = Math.floor(Math.random() * 5)\n\n      if (firePixelsArray[belowPixelIndex] - decay < 0) {\n        return setFirePixelsArray(oldArr => {\n          const newArr = oldArr\n          newArr[currentPixelIndex] = 0\n          return newArr\n        })\n      }\n\n      setFirePixelsArray(oldArr => {\n        const newArr = oldArr\n        newArr[currentPixelIndex - decay] =\n          firePixelsArray[belowPixelIndex] - decay\n        return newArr\n      })\n    },\n    [fireWidth, fireHeight, firePixelsArray]\n  )\n\n  const calculateFirePropagation = useCallback(() => {\n    for (const column of fireWithArray) {\n      for (const row of fireHeightArray) {\n        const pixelIndex = column + fireWidth * row\n\n        createFireIntensityPerPixel(pixelIndex)\n      }\n    }\n\n    forceUpdate()\n  }, [\n    forceUpdate,\n    fireWidth,\n    fireWithArray,\n    fireHeightArray,\n    createFireIntensityPerPixel,\n  ])\n\n  const createFireSource = useCallback(() => {\n    const overflowPixelIndex = fireWidth * fireHeight\n    for (const column of fireWithArray) {\n      const pixelIndex = overflowPixelIndex - fireWidth + column\n\n      setFirePixelsArray(oldArr => {\n        const newArr = oldArr\n        newArr[pixelIndex] = 36\n        return newArr\n      })\n    }\n  }, [fireWidth, fireHeight, fireWithArray])\n\n  const renderFire = fireHeightArray.map(row => {\n    const rowsColumns = fireWithArray.map(column => {\n      const pixelIndex = column + fireWidth * row\n      const pixelIntensity = firePixelsArray[pixelIndex]\n\n      if (debug) {\n        return (\n          <S.TableData key={`column-${column}`}>\n            <S.PixelIndex>{pixelIndex}</S.PixelIndex>\n            {pixelIntensity}\n          </S.TableData>\n        )\n      }\n\n      const colorString = fireColorsPalette[pixelIntensity]\n\n      return <S.Pixel bg={colorString} key={`column-${column}`} />\n    })\n\n    return <tr key={`row-${row}`}>{rowsColumns}</tr>\n  })\n\n  const start = useCallback(() => {\n    createFireSource()\n\n    setInterval(() => {\n      calculateFirePropagation()\n    }, 1000)\n  }, [createFireSource, calculateFirePropagation])\n\n  useEffect(() => {\n    start()\n  }, [start])\n\n  return (\n    <S.Container>\n      <S.Table>\n        <tbody>{renderFire}</tbody>\n      </S.Table>\n    </S.Container>\n  )\n}\n\nexport default DoomFire\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    margin:0;\n    padding:0;\n    box-sizing: border-box;\n    border: 0;\n    text-decoration: none;\n  }\n\n  html, body, #root {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    height: 100%;\n  }\n\n  body {\n    background-color: #282a36;\n  }\n`\n","import React from 'react'\nimport DoomFire from './components/DoomFire'\nimport { GlobalStyle } from './theme/GlobalStyles'\n\nconst App: React.FC = () => {\n  return (\n    <main>\n      <GlobalStyle />\n      <DoomFire />\n    </main>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}